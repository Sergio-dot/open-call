{{template "base" .}}

{{define "css"}}
    <style>
        body {
            background: url("/static/images/animated_shape.svg") no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
        }

        .unselectable {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .container {
            max-width: 100%;
            width: 100vw;
        }

        .sidebar {
            height: 100vh;
        }

        #content {
            background-color: #ffffff;
            display: none;
        }

        /* Small devices (landscape phones, 576px and up) */
        @media (min-width: 576px) {
            .sidebar {
                width: 30vw;
            }
        }

        /* Medium devices (tablets, 768px and up) */
        @media (min-width: 768px) {
            .sidebar {
                width: 28vw;
            }
        }

        /* Large devices (desktops, 992px and up) */
        @media (min-width: 992px) {
            .sidebar {
                width: 25vw;
            }
        }

        /* X-Large devices (large desktops, 1200px and up) */
        @media (min-width: 1200px) {
            .sidebar {
                width: 25vw;
            }
        }

        /* XX-Large devices (larger desktops, 1400px and up) */
        @media (min-width: 1400px) {
            .sidebar {
                width: 18vw;
            }
        }
    </style>
{{end}}

{{define "content"}}
    {{$username := index .Data "username"}}
    {{$email := index .Data "email"}}

    <!-- Container -->
    <div class="container d-flex" id="container">
        <!-- Sidebar -->
        <div class="d-flex flex-column flex-shrink-0 p-3 bg-light sidebar">
            <span class="fs-2 align-self-center unselectable">OpenCall</span>
            <hr>
            <ul class="d-grid gap-2 nav nav-pills flex-column mb-auto justify-content-center">
                <li class="align-self-center">
                    <button id="btn-create" type="button" class="btn btn-outline-primary">
                        <i class="fa-solid fa-plus me-2"></i><span>Create room</span>
                    </button>
                </li>
                <li class="align-self-center">
                    <button id="btn-join" type="button" class="btn btn-outline-primary w-100">
                        <i class="fa-solid fa-right-to-bracket me-2"></i><span>Join room</span>
                    </button>
                </li>
                <li class="align-self-center">
                    <button type="button" class="btn btn-outline-dark w-100" id="btn-profile">
                        <i class="fa-solid fa-user me-2"></i><span>Profile</span>
                    </button>
                </li>
            </ul>
            <a type="button" class="btn btn-outline-danger align-self-center w-50" href="/user/signout">
                <i class="fa-solid fa-right-from-bracket me-2"></i><span>Logout</span>
            </a>
            <hr>
            <div class="align-self-center unselectable">
                <p>Logged in as: <strong>{{$username}}</strong></p>
            </div>
        </div>
        <!-- Sidebar -->
        <div id='content' class='position-relative text-white p-5 ms-4 mt-3 mb-3 rounded-3'>
            <h1 class='text-dark'>{{index .Data "username"}}'s account information:</h1>
            <form id='updateForm'>
                <div class='mb-3'>
                    <label class='form-label text-dark' for='username'>Username:</label>
                    <input id='username' type='text' class='form-control' value='{{index .Data "username"}}'
                           disabled autocomplete="off"></input>
                </div>
                <div class='mb-3'>
                    <label class='form-label text-dark' for='email'>Email:</label>
                    <input id='email' type='email' class='form-control' value='{{index .Data "email"}}'
                           disabled autocomplete="off"></input>
                </div>
                <div class='mb-3'>
                    <label id='creation-date-label' class='form-label text-dark' for='creation-date'>Registration
                        date:</label>
                    <input id='creation-date' type='text' class='form-control' value='{{index .Data "createdAt"}}'
                           disabled></input>
                </div>
            </form>
            <div id='btn-group' class='position-absolute bottom-0 end-0 mb-4 me-4'>
                <button id='btn-edit' class='btn btn-primary'>
                    <i class='fa-solid fa-pen-to-square me-2'></i>
                    Edit
                </button>
                <button id='btn-save' class='btn btn-success'>
                    <i class='fa-solid fa-floppy-disk me-2'></i>
                    Save
                </button>
                <button id='btn-cancel' class='btn btn-danger'>
                    <i class='fa-solid fa-xmark me-2'></i>
                    Cancel
                </button>
            </div>
        </div>
    </div>
    <!-- Container -->

{{end}}

{{define "js"}}
    <script>
        // Click on btn-profile -> Open Profile
        document.getElementById("btn-profile").addEventListener("click", function () {
            document.getElementById("content").style.display = "block";
            document.getElementById("btn-save").style.display = "none";
            document.getElementById("btn-cancel").style.display = "none";
        })

        // Click on bt-edit -> Enter edit mode
        document.getElementById("btn-edit").addEventListener("click", function () {
            document.getElementById("btn-edit").style.display = "none";
            document.getElementById("btn-save").style.display = "inline";
            document.getElementById("btn-cancel").style.display = "inline";
            document.getElementById("username").disabled = false;
            document.getElementById("email").disabled = false;
            document.getElementById("creation-date").style.display = "none";
            document.getElementById("creation-date-label").style.display = "none";
        })

        // Click on btn-cancel -> Exit edit mode and discard changes
        document.getElementById("btn-cancel").addEventListener("click", function () {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success me-2',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Warning!',
                text: "You are going to discard all changes.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirm',
                cancelButtonText: 'Cancel',
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById("username").value = "{{index .Data "username"}}";
                    document.getElementById("username").disabled = true;
                    document.getElementById("email").value = "{{index .Data "email"}}";
                    document.getElementById("email").disabled = true;
                    document.getElementById("creation-date").style.display = "block";
                    document.getElementById("creation-date-label").style.display = "block";
                    document.getElementById("btn-edit").style.display = "inline";
                    document.getElementById("btn-save").style.display = "none";
                    document.getElementById("btn-cancel").style.display = "none";
                }
            })
        })

        // Click on btn-save -> Exit edit mode and update user info
        document.getElementById("btn-save").addEventListener("click", function () {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success me-2',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this action.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Confirm',
                cancelButtonText: 'Cancel',
            }).then((result) => {
                if (result.isConfirmed) {
                    let uname = document.getElementById("username").value;
                    let email = document.getElementById("email").value;
                    window.location.href = "/user/update/{{index .Data "id"}}/do?uname=" + uname + "&email=" + email;
                }
            })
        })

        // Click on btn-create -> Create new room
        document.getElementById("btn-create").addEventListener("click", async function () {
            const { value: formValues } = await Swal.fire({
                title: 'Room name:',
                html: '<input id="swal-input" class="swal2-input">',
                focusConfirm: false,
                preConfirm: () => {
                    let name = document.getElementById('swal-input').value;
                    window.location.replace(`/room/create`);
                }
            })
        })
    </script>
{{end}}